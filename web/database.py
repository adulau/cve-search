from sqlalchemy import create_engine
from sqlalchemy.orm import scoped_session, sessionmaker
from sqlalchemy import Column, Integer, Float, String, ForeignKey, DateTime, Boolean

from sqlalchemy.ext.declarative import declarative_base
import os

# Database
engine = create_engine('sqlite:///notifs.db', convert_unicode=True, connect_args={'check_same_thread': False})
db_session = scoped_session(sessionmaker(autocommit=False,
                                        autoflush=False,
                                        bind=engine))
Base = declarative_base()
Base.query = db_session.query_property()

class Notification(Base):
  __tablename__ = 'notifications'
  __table_args__ = {
    'extend_existing': True,
  }
  
  id = Column(Integer, primary_key=True)
  fulltxt = Column(Boolean, default=False)
  user = Column(String(128))
  email = Column(String(256))
  vendor = Column(String(64), index=True, nullable=False)
  product = Column(String(64), index=True, nullable=False)
  version = Column(String(64), nullable=False)

def init_db():
  # import all modules here that might define models so that
  # they will be registered properly on the metadata.  Otherwise
  # you will have to import them first before calling init_db()
  Base.metadata.create_all(bind=engine)
